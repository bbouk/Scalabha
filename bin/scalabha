#/bin/bash

EXIT_CODE=0
JARS=`echo $SCALABHA_DIR/lib/*.jar $SCALABHA_DIR/target/*.jar | tr ' ' ':'`

JARS_MANAGED=
if [ -e $SCALABHA_DIR/lib_managed ]
then
    JARS_MANAGED=`find $SCALABHA_DIR/lib_managed -name '*.jar' -print | tr '\n' ':'`
fi

SCALA_LIB="$HOME/.sbt/boot/scala-2.9.1/lib/scala-library.jar"

CP=$SCALABHA_DIR/target/classes:$JARS:$JARS_MANAGED:$SCALA_LIB:$CLASSPATH

if [ -z $JAVA_MEM_FLAG ] 
then
    JAVA_MEM_FLAG=-Xmx2g
fi

JAVA_COMMAND="java $JAVA_MEM_FLAG -classpath $CP"
SCALA_COMMAND="scala -classpath $CP"


CMD=$1
shift

help()
{
cat <<EOF
Scalabha 0.1 commands: 

  build         build Scalabha with SBT
  run           run the main method of a given class

Include --help with any option for more information
EOF
}

if [ $CMD = 'build' ]; then

    if test -f ~/.sbtconfig; then
	. ~/.sbtconfig
    fi
    java -Dfile.encoding=UTF8 -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m ${SBT_OPTS} -jar $SCALABHA_DIR/bin/sbt-launch-*.jar "$@"
    (( EXIT_CODE += $? ))

elif [[ $CMD = 'tokenize' ]]; then
    tokenize.sh $1
    (( EXIT_CODE += $? ))

elif [[ $CMD = 'treeseed' ]]; then
    treeseed.sh $1
    (( EXIT_CODE += $? ))

elif [[ $CMD = 'treemerge' ]]; then
    treemerge.sh $1
    (( EXIT_CODE += $? ))

elif [ $CMD = 'viz' ]; then

    head -n $2 $1 | tail -n 1 | tr \(\) \[\]
    (( EXIT_CODE += $? ))

else 

    CLASS=

    case $CMD in
        ccg) CLASS=opennlp.scalabha.ccg.CcgParser;;
        geninfo) CLASS=opennlp.scalabha.preproc.XmlToInfo;;
        geninfo-kin) CLASS="opennlp.scalabha.preproc.XmlToInfo -R -i $LDMT_MURI_DIR/data/phase2/kin/orig -o $LDMT_MURI_DIR/data/phase2/kin/info";;
        geninfo-mlg) CLASS="opennlp.scalabha.preproc.XmlToInfo -R -i $LDMT_MURI_DIR/data/phase2/mlg/orig -o $LDMT_MURI_DIR/data/phase2/mlg/info";;
        check-tree) CLASS="opennlp.scalabha.tree.TagChecker"
        ;;
        run) CLASS=$1; shift;;
        help) help; exit 1;;
        *) echo "Unrecognized command: $CMD"; help; exit 1;;
    esac

    $JAVA_COMMAND $CLASS $*
    (( EXIT_CODE += $? ))

fi


exit $EXIT_CODE
