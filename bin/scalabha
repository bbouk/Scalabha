#/bin/bash

EXIT_CODE=0

if [ -z $JAVA_MEM_FLAG ] 
then
    JAVA_MEM_FLAG=-Xmx2g
fi

SBT_BUILD_CMD="java -Dfile.encoding=UTF8 -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m ${SBT_OPTS} -jar $SCALABHA_DIR/bin/sbt-launch-*.jar"
SBT_RUN_CMD="java $JAVA_MEM_FLAG -jar $SCALABHA_DIR/bin/sbt-launch-*.jar"

JARS="`echo $SCALABHA_DIR/lib/*.jar $SCALABHA_DIR/lib_managed/*/*.jar $SCALABHA_DIR/lib_managed/*/*/*.jar $SCALABHA_DIR/lib_managed/*/*/*/*.jar $SCALABHA_DIR/output/*.jar $SCALABHA_DIR/target/*.jar | tr ' ' ':'`"
SCALA_LIB="$HOME/.sbt/boot/scala-2.9.1/lib/scala-library.jar"
CP="$SCALABHA_DIR/target/classes:$SCALA_LIB:$JARS:$CLASSPATH"
JAVA="$JAVA_HOME/bin/java"
JAVA_COMMAND="$JAVA -classpath $CP"

CMD=$1
shift

help()
{
cat <<EOF
Scalabha 0.2.1 commands: 

  build         build Scalabha with SBT
  run           run the main method of a given class

Include --help with any option for more information
EOF
}

if [ $CMD = 'build' ]; then

    if test -f ~/.sbtconfig; then
	. ~/.sbtconfig
    fi
    $SBT_BUILD_CMD "$@"
    (( EXIT_CODE += $? ))

else 

    CLASS=

    case $CMD in
        ccg) CLASS=opennlp.scalabha.ccg.CcgParser;;
        check-tree) CLASS="opennlp.scalabha.tree.TagChecker";;
        classify)  CLASS="opennlp.scalabha.classify.Classify" ;;
        maxent-train) CLASS=opennlp.maxent.ModelTrainer;;
        maxent-apply) CLASS=opennlp.maxent.ModelApplier;;
        run) CLASS=$1; shift;;
        score)  CLASS="opennlp.scalabha.classify.ClassifyScorer" ;;
        help) help; exit 1;;
        *) echo "Unrecognized command: $CMD"; help; exit 1;;
    esac

    #$SBT_RUN_CMD "run-main $CLASS $*"
    $JAVA_COMMAND $CLASS ${1+"$@"}
    (( EXIT_CODE += $? ))

fi


exit $EXIT_CODE

